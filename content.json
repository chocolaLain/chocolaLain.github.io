{"meta":{"title":"Lain's Blog","subtitle":"for Alice","description":"Welcome to WEIRD","author":"Lain","url":"http://chocolaLain.github.io"},"pages":[{"title":"分类","date":"2018-11-13T08:56:10.000Z","updated":"2018-11-13T09:50:46.725Z","comments":true,"path":"categories/index.html","permalink":"http://chocolaLain.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-11-13T08:51:31.000Z","updated":"2018-11-13T08:55:03.074Z","comments":true,"path":"tags/index.html","permalink":"http://chocolaLain.github.io/tags/index.html","excerpt":"","text":""},{"title":"search","date":"2018-11-13T07:01:19.000Z","updated":"2018-11-13T07:01:19.708Z","comments":true,"path":"search/index.html","permalink":"http://chocolaLain.github.io/search/index.html","excerpt":"","text":""},{"title":"404","date":"2018-11-13T07:01:46.000Z","updated":"2018-11-13T07:01:46.914Z","comments":true,"path":"404/index.html","permalink":"http://chocolaLain.github.io/404/index.html","excerpt":"","text":""}],"posts":[{"title":"函数与程序结构","slug":"函数与程序结构","date":"2018-11-13T12:28:03.000Z","updated":"2018-11-13T13:49:55.269Z","comments":true,"path":"2018/11/13/函数与程序结构/","link":"","permalink":"http://chocolaLain.github.io/2018/11/13/函数与程序结构/","excerpt":"2018年11月8日, 星期四 4.1.1作用域与函数定义1.出现在Python程序文件的表层创建的名字(无论是函数名还是变量名)都具有全局作用域.而模块里的函数定义了一个局部作用域(范围就是函数的体)","text":"2018年11月8日, 星期四 4.1.1作用域与函数定义1.出现在Python程序文件的表层创建的名字(无论是函数名还是变量名)都具有全局作用域.而模块里的函数定义了一个局部作用域(范围就是函数的体) 2.Python的一条基本原则是赋值及定义,一个作用域里面一个变量只有一个定义,在这个作用域里的任何地方,只要提到变量名都是使用同一个定义. 如果全局定义域里面x有了定义,而某个函数里面又给x重新定义,那么这个函数里面用这个作用域里面的局部定义,即x的局部定义遮蔽全局定义,没有局部定义的话也可以直接使用全局定义.3.12345x = 1def fun2(): y = x # 这时x无定义 x = 2 # 当函数体里面出现过x的赋值定义时,无论其他的x赋值定义处在什么位置,都必须把这个x当做局部变量,否则下面再用到x的时候会出现不知道到底用全局变量还是局部变量的矛盾. return x + y # 报错 local variable 'x' referenced before assignment 4.1.2 环境和状态","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://chocolaLain.github.io/tags/python/"}]},{"title":"markdown语法学习","slug":"markdown语法学习","date":"2018-11-13T11:40:27.000Z","updated":"2018-11-13T13:52:20.151Z","comments":true,"path":"2018/11/13/markdown语法学习/","link":"","permalink":"http://chocolaLain.github.io/2018/11/13/markdown语法学习/","excerpt":"这是为知的markdown教程这是视频形式的的markdown教程 一级标题二级标题三级标题共有六级标题(类似h1-h6)","text":"这是为知的markdown教程这是视频形式的的markdown教程 一级标题二级标题三级标题共有六级标题(类似h1-h6) 1.有序列表2.有序列表3.有序列表 无序列表 无序列表 插入图片可以直接插入,或者使用标准的markdown语法 粗体斜体删除线 引用:无论你去哪里,人与人之间都是联系着的 – Lain谈谈为知笔记的 markdown功能引用语块下面如果还有内容的话继续归入引用,不管开头有没有>,想要分开就要回车隔出一行来 表格 引用时>与字之间有没有空格无所谓但是使用表格时,|与字之间需要有空格另外| —— |中的—–可以用‘:’来设置左对齐右对齐或者居中设置 episode caption script 01 WERID 小中千昭 代码注意 反单引号是在Esc 下面如果需要指定语言,在开头的```后面紧跟具体语言,如```Python12345x = 1def fun2(): y = x # 这时x无定义 x = 2 # 当函数体里面出现过x的赋值定义时,无论其他的x赋值定义处在什么位置,都必须把这个x当做局部变量,否则下面再用到x的时候会出现不知道到底用全局变量还是局部变量的矛盾. return x + y # 报错 local variable 'x' referenced before assignment 最后附上本文Markdown语法图片版图片引用时,括号里面不需要url","categories":[{"name":"语法学习","slug":"语法学习","permalink":"http://chocolaLain.github.io/categories/语法学习/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://chocolaLain.github.io/tags/markdown/"},{"name":"语法学习","slug":"语法学习","permalink":"http://chocolaLain.github.io/tags/语法学习/"}]}]}